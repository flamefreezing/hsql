<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="org.freezing.naive.repository.SeatRepository">




<select id="getSeatsByFloorId" resultType="org.freezing.naive.dto.GetSeatsByFloorIdOutDto">
		<![CDATA[
		    SELECT 
		    SEAT.ID as SEAT_ID, 
		    SEAT.NAME as SEAT_NAME, 
		    SEAT.STATUS, 
		    FLOOR.FLOOR, 
		    BUILDING.NAME as BUILDING_NAME 
		FROM 
		    SEAT 
		JOIN 
		    FLOOR ON SEAT.FLOOR_ID = FLOOR.ID 
		JOIN 
		    BUILDING ON FLOOR.BUILDING_ID = BUILDING.ID 
		WHERE 
		    SEAT.FLOOR_ID = #{floorId}
		]]>
    </select>



<select id="getAvailableSeats" resultType="org.freezing.naive.dto.GetAvailableSetsOutDto">
		<![CDATA[
		    SELECT 
		    SEAT.ID AS SEAT_ID, 
		    SEAT.NAME AS SEAT_NAME, 
		    SEAT.STATUS,
		    FLOOR.FLOOR AS FLOOR, 
		    BUILDING.NAME AS BUILDING_NAME
		FROM 
		    SEAT
		JOIN 
		    FLOOR ON SEAT.FLOOR_ID = FLOOR.ID
		JOIN 
		    BUILDING ON FLOOR.BUILDING_ID = BUILDING.ID
		WHERE 
		    SEAT.STATUS = 'AVAILABLE'
		    AND NOT EXISTS (
		        SELECT 1 
		        FROM RESERVATION 
		        WHERE RESERVATION.SEAT_ID = SEAT.ID 
		        AND RESERVATION.STATUS IN ('RESERVED', 'IN_USE') 
		        AND (RESERVATION.START_TIME < #{endTime} AND RESERVATION.END_TIME > #{startTime})
		    )
		OFFSET #{skip}
		LIMIT ${limit}
		]]>
    </select>

</mapper>
